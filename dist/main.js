(()=>{"use strict";var t={556:(t,e,A)=>{A.d(e,{Z:()=>o});var n=A(537),i=A.n(n),a=A(645),r=A.n(a)()(i());r.push([t.id,"body {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n  color: white;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nh1,\nh2,\nh3,\nh4,\np,\nul {\n  margin: 0;\n}\n\n.show-opacity {\n  opacity: 1 !important;\n}\n\n.popup {\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(5px);\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n}\n.popup .task-form {\n  position: relative;\n  background-color: #007fff;\n  flex-basis: 50%;\n  padding: 50px;\n  border-radius: 5px;\n  font-size: 1.5rem;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n}\n@media (max-width: 768px) {\n  .popup .task-form {\n    font-size: 1.2rem;\n    padding: 10px;\n    flex-basis: 95%;\n  }\n}\n.popup .task-form > *:not(:last-child) {\n  margin-bottom: 10px;\n  display: flex;\n}\n.popup .task-form input {\n  font-size: 1.3rem;\n  border-radius: 5px;\n}\n@media (max-width: 768px) {\n  .popup .task-form input {\n    font-size: 1rem;\n  }\n}\n.popup .task-form label {\n  margin-right: 10px;\n}\n.popup .task-form select {\n  font-size: 1.3rem;\n  border-radius: 5px;\n}\n@media (max-width: 768px) {\n  .popup .task-form select {\n    font-size: 1rem;\n  }\n}\n.popup .task-form textarea {\n  border-radius: 5px;\n  min-height: 75px;\n  flex-basis: 60%;\n  font-size: 1.1rem;\n}\n@media (max-width: 768px) {\n  .popup .task-form textarea {\n    font-size: 1rem;\n  }\n}\n.popup .task-form .exit-icon {\n  position: absolute;\n  top: 2%;\n  right: 2%;\n  cursor: pointer;\n  color: white;\n}\n.popup .task-form .form-submit-btn {\n  background-color: #379634;\n  color: white;\n  font-size: 1.2rem;\n  padding: 8px;\n  margin-bottom: 0;\n  margin-top: 30px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n}\n.popup .task-form .form-submit-btn:active {\n  background-color: #225c20;\n}\n\n.wrap {\n  width: 85%;\n  margin: 0 auto;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  min-height: 100vh;\n}\n@media (max-width: 768px) {\n  .wrap {\n    width: 100%;\n  }\n}\n.wrap #add-list-btn {\n  background-color: #007fff;\n  font-size: 1.3rem;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 8px;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n}\n.wrap #add-list-btn:active {\n  background-color: #0054a8;\n}\n.wrap .list-input-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n.wrap .list-input-container input {\n  font-size: 1.3rem;\n  padding: 8px;\n  margin-right: 10px;\n  width: 30%;\n}\n@media (max-width: 768px) {\n  .wrap .list-input-container input {\n    width: 50%;\n    font-size: 1.1rem;\n    padding: 5px;\n  }\n}\n.wrap .main {\n  padding: 20px;\n}\n.wrap h1 {\n  font-size: 4rem;\n  padding: 75px 0;\n  text-align: center;\n  background-color: #2de1fc;\n}\n.wrap .main-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -10px;\n}\n.wrap .main-list > * {\n  flex-basis: 33.333%;\n  text-align: center;\n  border-radius: 5px;\n}\n.wrap .main-list > *:not(:last-child) {\n  margin-bottom: 10px;\n}\n@media (max-width: 768px) {\n  .wrap .main-list > * {\n    flex-basis: 100%;\n  }\n}\n.wrap .main-list .list-container {\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n}\n.wrap .main-list .list {\n  margin-right: 10px;\n  min-height: 350px;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  position: relative;\n  padding-bottom: 50px;\n}\n.wrap .main-list .list .add-task-btn {\n  background-color: #379634;\n  font-size: 1rem;\n  color: white;\n  margin-bottom: 10px;\n  padding: 8px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n}\n.wrap .main-list .list .add-task-btn:active {\n  background-color: #225c20;\n}\n.wrap .main-list .list .list-delete-btn {\n  width: 50%;\n  position: absolute;\n  bottom: 2%;\n  left: 50%;\n  transform: translate(-50%);\n  background-color: #d7263d;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  padding: 10px;\n  cursor: pointer;\n}\n.wrap .main-list .list .list-delete-btn:active {\n  background-color: #981b2b;\n}\n.wrap .main-list .list-header {\n  background-color: #090c9b;\n  font-size: 1.4rem;\n  text-align: center;\n  font-weight: 600;\n  padding: 8px 12px;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  margin-bottom: 8px;\n}\n.wrap .task {\n  padding: 10px;\n  margin-bottom: 15px;\n  margin-left: 10px;\n  margin-right: 10px;\n  border-radius: 5px;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n}\n.wrap .task .task-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: black;\n  cursor: pointer;\n  font-size: 1.1rem;\n}\n@media (max-width: 768px) {\n  .wrap .task .task-header {\n    font-size: 0.8rem;\n  }\n}\n.wrap .task .task-header .title-and-icon {\n  display: flex;\n}\n.wrap .task .task-description {\n  color: black;\n  text-align: start;\n  padding-left: 30px;\n  margin-top: 5px;\n}\n@media (max-width: 768px) {\n  .wrap .task .task-description {\n    font-size: 0.7rem;\n  }\n}\n.wrap .task i {\n  margin-right: 5px;\n}\n\n.high {\n  border: 2px solid red;\n}\n\n.normal {\n  border: 2px solid blue;\n}\n\n.low {\n  border: 2px solid green;\n}\n\n/*# sourceMappingURL=main.css.map */\n","",{version:3,sources:["webpack://./src/css/main.scss","webpack://./src/css/main.css"],names:[],mappings:"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",sourceRoot:""}]);const o=r},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var A="",n=void 0!==e[5];return e[4]&&(A+="@supports (".concat(e[4],") {")),e[2]&&(A+="@media ".concat(e[2]," {")),n&&(A+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),A+=t(e),n&&(A+="}"),e[2]&&(A+="}"),e[4]&&(A+="}"),A})).join("")},e.i=function(t,A,n,i,a){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(n)for(var o=0;o<this.length;o++){var s=this[o][0];null!=s&&(r[s]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);n&&r[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),A&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=A):l[2]=A),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],A=t[3];if(!A)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),a="/*# ".concat(i," */"),r=A.sources.map((function(t){return"/*# sourceURL=".concat(A.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function A(t){for(var A=-1,n=0;n<e.length;n++)if(e[n].identifier===t){A=n;break}return A}function n(t,n){for(var a={},r=[],o=0;o<t.length;o++){var s=t[o],c=n.base?s[0]+n.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=A(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=i(u,n);n.byIndex=o,e.splice(o,0,{identifier:d,updater:m,references:1})}r.push(d)}return r}function i(t,e){var A=e.domAPI(e);return A.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;A.update(t=e)}else A.remove()}}t.exports=function(t,i){var a=n(t=t||[],i=i||{});return function(t){t=t||[];for(var r=0;r<a.length;r++){var o=A(a[r]);e[o].references--}for(var s=n(t,i),c=0;c<a.length;c++){var l=A(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:t=>{var e={};t.exports=function(t,A){var n=function(t){if(void 0===e[t]){var A=document.querySelector(t);if(window.HTMLIFrameElement&&A instanceof window.HTMLIFrameElement)try{A=A.contentDocument.head}catch(t){A=null}e[t]=A}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(A)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,A)=>{t.exports=function(t){var e=A.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(A){!function(t,e,A){var n="";A.supports&&(n+="@supports (".concat(A.supports,") {")),A.media&&(n+="@media ".concat(A.media," {"));var i=void 0!==A.layer;i&&(n+="@layer".concat(A.layer.length>0?" ".concat(A.layer):""," {")),n+=A.css,i&&(n+="}"),A.media&&(n+="}"),A.supports&&(n+="}");var a=A.sourceMap;a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,A)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function A(n){var i=e[n];if(void 0!==i)return i.exports;var a=e[n]={id:n,exports:{}};return t[n](a,a.exports,A),a.exports}A.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return A.d(e,{a:e}),e},A.d=(t,e)=>{for(var n in e)A.o(e,n)&&!A.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},A.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{class t{constructor(t){this.title=t,this.list=[]}addTask(t){this.list.push(t),localStorage.setItem("MainList",JSON.stringify(e.list))}removeTask(t){this.list.splice(t,1),localStorage.setItem("MainList",JSON.stringify(e.list))}}const e=function(){let e=[];return localStorage.MainList&&(e=JSON.parse(localStorage.MainList),e.forEach((e=>{Object.setPrototypeOf(e,t.prototype)}))),{addList:function(t){e.push(t),localStorage.setItem("MainList",JSON.stringify(e))},removeList:function(t){e.splice(t,1),localStorage.setItem("MainList",JSON.stringify(e))},list:e}}();class n{constructor(t,e,A,n){this.title=t,this.description=e,this.dueDate=A,this.priority=n,this.check=!1}}function i(t,A){let i=document.createElement("div");i.classList.add("list-container");let r=document.createElement("div");r.setAttribute("data-list",e.list.indexOf(t)),i.setAttribute("data-list-container",e.list.indexOf(t)),r.classList.add("list");let o=document.createElement("div");o.classList.add("list-header"),o.innerText=t.title;let s=document.createElement("button");s.classList.add("add-task-btn"),s.innerText="Add new task";let c=document.createElement("button");c.innerText="Delete list",c.classList.add("list-delete-btn"),r.append(o,s,c),s.addEventListener("click",(()=>function(t){let A=document.createElement("div");A.classList.add("popup");let i=document.createElement("form");i.classList.add("task-form");let r=document.createElement("div"),o=document.createElement("input"),s=document.createElement("label");s.innerText="Title:",s.setAttribute("for","form-title"),o.setAttribute("id","form-title"),r.append(s,o);let c=document.createElement("div"),l=document.createElement("input");l.setAttribute("type","date");let d=document.createElement("label");d.innerText="Due Date:",d.setAttribute("for","form-date"),l.setAttribute("id","form-title"),c.append(d,l);let p=document.createElement("div"),u=document.createElement("textarea");u.setAttribute("id","form-description");let m=document.createElement("label");m.innerText="Description:",m.setAttribute("for","form-description"),p.append(m,u);let E=document.createElement("div"),C=document.createElement("select");C.setAttribute("id","form-priority");let f=document.createElement("option");f.setAttribute("value","high"),f.innerText="High";let x=document.createElement("option");x.setAttribute("value","normal"),x.innerText="Normal";let g=document.createElement("option");g.setAttribute("value","low"),g.innerText="Low",C.append(f,x,g);let b=document.createElement("label");b.innerText="Priority:",b.setAttribute("for","form-priority"),E.append(b,C);let h=document.createElement("button");h.innerText="Create task",h.setAttribute("type","button"),h.classList.add("form-submit-btn");let v=document.createElement("div"),y=document.createElement("i");y.classList="fa-solid fa-xmark fa-2x",v.append(y),v.classList.add("exit-icon"),i.append(r,c,p,E,h,v),A.append(i),document.body.append(A),h.addEventListener("click",(()=>{if(""===o.value)alert("Task must have a title");else{let i=new n(o.value,u.value,l.value,C.value);e.list[t].addTask(i),a(i,document.querySelector(`[data-list="${t}"]`)),A.classList.toggle("show-opacity"),setTimeout((()=>{A.remove()}),"300")}})),v.addEventListener("click",(()=>{A.classList.toggle("show-opacity"),setTimeout((()=>{A.remove()}),"300")})),setTimeout((()=>{A.classList.toggle("show-opacity")}),"0")}(r.getAttribute("data-list")))),c.addEventListener("click",(()=>{i.classList.toggle("show-opacity"),setTimeout((()=>{i.remove();let t=document.querySelectorAll(".list-container");t.forEach((e=>{e.setAttribute("data-list-container",Array.from(t).indexOf(e))}));let e=document.querySelectorAll(".list");e.forEach((t=>{t.setAttribute("data-list",Array.from(e).indexOf(t))}))}),"300"),e.removeList(i.getAttribute("data-list-container"))})),t.list.forEach((t=>{a(t,r)})),i.append(r),A.append(i),setTimeout((()=>{i.classList.toggle("show-opacity")}),"0")}function a(t,e){let A=document.createElement("div");A.classList.add("task"),"high"===t.priority&&A.classList.toggle("high"),"normal"===t.priority&&A.classList.toggle("normal"),"low"===t.priority&&A.classList.toggle("low");let n=document.createElement("div");n.classList.add("task-header"),n.addEventListener("click",(()=>{A.contains(s)?(s.remove(),o.classList="fa-solid fa-chevron-right"):(A.append(s),o.classList="fa-solid fa-chevron-down")}));let i=document.createElement("div");i.classList.add("title-and-icon");let a=document.createElement("div");a.innerText=t.title,a.style="font-weight: 600;";let r=document.createElement("div");r.classList.add("task-date"),""===t.dueDate?r.innerText="Date due: (Not specified)":r.innerText=`Date due: ${t.dueDate}`;let o=document.createElement("i");o.classList="fa-solid fa-chevron-right",i.append(o,a),n.append(i,r),A.append(n);let s=document.createElement("div");s.classList.add("task-description"),""!==t.description?s.innerText=t.description:s.innerText="(No description...)",e.append(A),setTimeout((()=>{A.classList.toggle("show-opacity")}),"300")}var r,o,s=A(379),c=A.n(s),l=A(795),d=A.n(l),p=A(569),u=A.n(p),m=A(565),E=A.n(m),C=A(216),f=A.n(C),x=A(589),g=A.n(x),b=A(556),h={};h.styleTagTransform=g(),h.setAttributes=E(),h.insert=u().bind(null,"head"),h.domAPI=d(),h.insertStyleElement=f(),c()(b.Z,h),b.Z&&b.Z.locals&&b.Z.locals,document.querySelector("#add-list-btn").addEventListener("click",(()=>{let A=document.querySelector("#add-list-input"),n="";n=""===A.value?"Unnamed list":A.value;let a=new t(`${n}`);e.addList(a),i(a,document.querySelector(".main-list"))})),localStorage.MainList&&(r=e,o=document.querySelector(".main-list"),r.list.forEach((t=>{i(t,o)})))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,